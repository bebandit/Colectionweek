#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CollectionWeek")]
public partial class collectionWeekDBMLDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertt_User_Log(t_User_Log instance);
  partial void Updatet_User_Log(t_User_Log instance);
  partial void Deletet_User_Log(t_User_Log instance);
  partial void InsertZone(Zone instance);
  partial void UpdateZone(Zone instance);
  partial void DeleteZone(Zone instance);
  #endregion
	
	public collectionWeekDBMLDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CollectionWeekConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public collectionWeekDBMLDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public collectionWeekDBMLDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public collectionWeekDBMLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public collectionWeekDBMLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<t_User_Log> t_User_Logs
	{
		get
		{
			return this.GetTable<t_User_Log>();
		}
	}
	
	public System.Data.Linq.Table<Zone> Zones
	{
		get
		{
			return this.GetTable<Zone>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_User_Log")]
public partial class t_User_Log : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
	
	public t_User_Log()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zone")]
public partial class Zone : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ZoneID;
	
	private string _Zone1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZoneIDChanging(int value);
    partial void OnZoneIDChanged();
    partial void OnZone1Changing(string value);
    partial void OnZone1Changed();
    #endregion
	
	public Zone()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ZoneID
	{
		get
		{
			return this._ZoneID;
		}
		set
		{
			if ((this._ZoneID != value))
			{
				this.OnZoneIDChanging(value);
				this.SendPropertyChanging();
				this._ZoneID = value;
				this.SendPropertyChanged("ZoneID");
				this.OnZoneIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Zone", Storage="_Zone1", DbType="NVarChar(50)")]
	public string Zone1
	{
		get
		{
			return this._Zone1;
		}
		set
		{
			if ((this._Zone1 != value))
			{
				this.OnZone1Changing(value);
				this.SendPropertyChanging();
				this._Zone1 = value;
				this.SendPropertyChanged("Zone1");
				this.OnZone1Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
